/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CheckSyncRequiredInput,
  HistoriqueDevisInput,
  HistoriqueDevisOutput,
  ImmeubleOutPutDTO,
  SyncOutput,
} from '../models/index';
import {
    CheckSyncRequiredInputFromJSON,
    CheckSyncRequiredInputToJSON,
    HistoriqueDevisInputFromJSON,
    HistoriqueDevisInputToJSON,
    HistoriqueDevisOutputFromJSON,
    HistoriqueDevisOutputToJSON,
    ImmeubleOutPutDTOFromJSON,
    ImmeubleOutPutDTOToJSON,
    SyncOutputFromJSON,
    SyncOutputToJSON,
} from '../models/index';

export interface ApiImmeubleCheckSyncIsRequiredPostRequest {
    token?: string;
    checkSyncRequiredInput?: CheckSyncRequiredInput;
}

export interface ApiImmeubleConfirmSyncPostRequest {
    token?: string;
    checkSyncRequiredInput?: CheckSyncRequiredInput;
}

export interface ApiImmeubleGetHistoriqueDevisImmeublePostRequest {
    token?: string;
    historiqueDevisInput?: HistoriqueDevisInput;
}

export interface ApiImmeubleGetImmeublesToSyncPostRequest {
    token?: string;
    checkSyncRequiredInput?: CheckSyncRequiredInput;
}

export interface ApiImmeubleGetInfoImmeubleGetRequest {
    token?: string;
}

export interface ApiImmeubleGetInfoImmeublePaginationGetRequest {
    token?: string;
    pageNumber?: number;
    pageSize?: number;
}

/**
 * ImmeubleApi - interface
 * 
 * @export
 * @interface ImmeubleApiInterface
 */
export interface ImmeubleApiInterface {
    /**
     * 
     * @param {string} [token] 
     * @param {CheckSyncRequiredInput} [checkSyncRequiredInput] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleCheckSyncIsRequiredPostRaw(requestParameters: ApiImmeubleCheckSyncIsRequiredPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>>;

    /**
     */
    apiImmeubleCheckSyncIsRequiredPost(requestParameters: ApiImmeubleCheckSyncIsRequiredPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput>;

    /**
     * 
     * @param {string} [token] 
     * @param {CheckSyncRequiredInput} [checkSyncRequiredInput] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleConfirmSyncPostRaw(requestParameters: ApiImmeubleConfirmSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>>;

    /**
     */
    apiImmeubleConfirmSyncPost(requestParameters: ApiImmeubleConfirmSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput>;

    /**
     * 
     * @param {string} [token] 
     * @param {HistoriqueDevisInput} [historiqueDevisInput] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleGetHistoriqueDevisImmeublePostRaw(requestParameters: ApiImmeubleGetHistoriqueDevisImmeublePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HistoriqueDevisOutput>>;

    /**
     */
    apiImmeubleGetHistoriqueDevisImmeublePost(requestParameters: ApiImmeubleGetHistoriqueDevisImmeublePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HistoriqueDevisOutput>;

    /**
     * 
     * @param {string} [token] 
     * @param {CheckSyncRequiredInput} [checkSyncRequiredInput] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleGetImmeublesToSyncPostRaw(requestParameters: ApiImmeubleGetImmeublesToSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>>;

    /**
     */
    apiImmeubleGetImmeublesToSyncPost(requestParameters: ApiImmeubleGetImmeublesToSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput>;

    /**
     * 
     * @param {string} [token] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleGetInfoImmeubleGetRaw(requestParameters: ApiImmeubleGetInfoImmeubleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ImmeubleOutPutDTO>>>;

    /**
     */
    apiImmeubleGetInfoImmeubleGet(requestParameters: ApiImmeubleGetInfoImmeubleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ImmeubleOutPutDTO>>;

    /**
     * 
     * @param {string} [token] 
     * @param {number} [pageNumber] 
     * @param {number} [pageSize] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImmeubleApiInterface
     */
    apiImmeubleGetInfoImmeublePaginationGetRaw(requestParameters: ApiImmeubleGetInfoImmeublePaginationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImmeubleOutPutDTO>>;

    /**
     */
    apiImmeubleGetInfoImmeublePaginationGet(requestParameters: ApiImmeubleGetInfoImmeublePaginationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImmeubleOutPutDTO>;

}

/**
 * 
 */
export class ImmeubleApi extends runtime.BaseAPI implements ImmeubleApiInterface {

    /**
     */
    async apiImmeubleCheckSyncIsRequiredPostRaw(requestParameters: ApiImmeubleCheckSyncIsRequiredPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/Immeuble/checkSyncIsRequired`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CheckSyncRequiredInputToJSON(requestParameters['checkSyncRequiredInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SyncOutputFromJSON(jsonValue));
    }

    /**
     */
    async apiImmeubleCheckSyncIsRequiredPost(requestParameters: ApiImmeubleCheckSyncIsRequiredPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput> {
        const response = await this.apiImmeubleCheckSyncIsRequiredPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiImmeubleConfirmSyncPostRaw(requestParameters: ApiImmeubleConfirmSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/Immeuble/confirmSync`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CheckSyncRequiredInputToJSON(requestParameters['checkSyncRequiredInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SyncOutputFromJSON(jsonValue));
    }

    /**
     */
    async apiImmeubleConfirmSyncPost(requestParameters: ApiImmeubleConfirmSyncPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput> {
        const response = await this.apiImmeubleConfirmSyncPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiImmeubleGetHistoriqueDevisImmeublePostRaw(requestParameters: ApiImmeubleGetHistoriqueDevisImmeublePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HistoriqueDevisOutput>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/Immeuble/getHistoriqueDevisImmeuble`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HistoriqueDevisInputToJSON(requestParameters['historiqueDevisInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HistoriqueDevisOutputFromJSON(jsonValue));
    }

    /**
     */
    async apiImmeubleGetHistoriqueDevisImmeublePost(requestParameters: ApiImmeubleGetHistoriqueDevisImmeublePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HistoriqueDevisOutput> {
        const response = await this.apiImmeubleGetHistoriqueDevisImmeublePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiImmeubleGetImmeublesToSyncPostRaw(requestParameters: ApiImmeubleGetImmeublesToSyncPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SyncOutput>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/Immeuble/getImmeublesToSync`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CheckSyncRequiredInputToJSON(requestParameters['checkSyncRequiredInput']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SyncOutputFromJSON(jsonValue));
    }

    /**
     */
    async apiImmeubleGetImmeublesToSyncPost(requestParameters: ApiImmeubleGetImmeublesToSyncPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SyncOutput> {
        const response = await this.apiImmeubleGetImmeublesToSyncPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiImmeubleGetInfoImmeubleGetRaw(requestParameters: ApiImmeubleGetInfoImmeubleGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ImmeubleOutPutDTO>>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/Immeuble/GetInfoImmeuble`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ImmeubleOutPutDTOFromJSON));
    }

    /**
     */
    async apiImmeubleGetInfoImmeubleGet(requestParameters: ApiImmeubleGetInfoImmeubleGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ImmeubleOutPutDTO>> {
        const response = await this.apiImmeubleGetInfoImmeubleGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiImmeubleGetInfoImmeublePaginationGetRaw(requestParameters: ApiImmeubleGetInfoImmeublePaginationGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ImmeubleOutPutDTO>> {
        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        if (requestParameters['pageNumber'] != null) {
            queryParameters['pageNumber'] = requestParameters['pageNumber'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/Immeuble/GetInfoImmeublePagination`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ImmeubleOutPutDTOFromJSON(jsonValue));
    }

    /**
     */
    async apiImmeubleGetInfoImmeublePaginationGet(requestParameters: ApiImmeubleGetInfoImmeublePaginationGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ImmeubleOutPutDTO> {
        const response = await this.apiImmeubleGetInfoImmeublePaginationGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Controle } from './Controle';
import {
    ControleFromJSON,
    ControleFromJSONTyped,
    ControleToJSON,
    ControleToJSONTyped,
} from './Controle';

/**
 * 
 * @export
 * @interface Composant
 */
export interface Composant {
    /**
     * 
     * @type {number}
     * @memberof Composant
     */
    idComposant?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Composant
     */
    nomComposant?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Composant
     */
    frequence?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Composant
     */
    statutLib?: string | null;
    /**
     * 
     * @type {Array<Controle>}
     * @memberof Composant
     */
    controles?: Array<Controle> | null;
}

/**
 * Check if a given object implements the Composant interface.
 */
export function instanceOfComposant(value: object): value is Composant {
    return true;
}

export function ComposantFromJSON(json: any): Composant {
    return ComposantFromJSONTyped(json, false);
}

export function ComposantFromJSONTyped(json: any, ignoreDiscriminator: boolean): Composant {
    if (json == null) {
        return json;
    }
    return {
        
        'idComposant': json['idComposant'] == null ? undefined : json['idComposant'],
        'nomComposant': json['nomComposant'] == null ? undefined : json['nomComposant'],
        'frequence': json['frequence'] == null ? undefined : json['frequence'],
        'statutLib': json['statutLib'] == null ? undefined : json['statutLib'],
        'controles': json['controles'] == null ? undefined : ((json['controles'] as Array<any>).map(ControleFromJSON)),
    };
}

export function ComposantToJSON(json: any): Composant {
    return ComposantToJSONTyped(json, false);
}

export function ComposantToJSONTyped(value?: Composant | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idComposant': value['idComposant'],
        'nomComposant': value['nomComposant'],
        'frequence': value['frequence'],
        'statutLib': value['statutLib'],
        'controles': value['controles'] == null ? undefined : ((value['controles'] as Array<any>).map(ControleToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Localisation } from './Localisation';
import {
    LocalisationFromJSON,
    LocalisationFromJSONTyped,
    LocalisationToJSON,
    LocalisationToJSONTyped,
} from './Localisation';

/**
 * 
 * @export
 * @interface PrestationDTO
 */
export interface PrestationDTO {
    /**
     * 
     * @type {string}
     * @memberof PrestationDTO
     */
    message?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PrestationDTO
     */
    code?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PrestationDTO
     */
    idOperation?: number | null;
    /**
     * 
     * @type {Array<Localisation>}
     * @memberof PrestationDTO
     */
    localisations?: Array<Localisation> | null;
}

/**
 * Check if a given object implements the PrestationDTO interface.
 */
export function instanceOfPrestationDTO(value: object): value is PrestationDTO {
    return true;
}

export function PrestationDTOFromJSON(json: any): PrestationDTO {
    return PrestationDTOFromJSONTyped(json, false);
}

export function PrestationDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrestationDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : json['message'],
        'code': json['code'] == null ? undefined : json['code'],
        'idOperation': json['idOperation'] == null ? undefined : json['idOperation'],
        'localisations': json['localisations'] == null ? undefined : ((json['localisations'] as Array<any>).map(LocalisationFromJSON)),
    };
}

export function PrestationDTOToJSON(json: any): PrestationDTO {
    return PrestationDTOToJSONTyped(json, false);
}

export function PrestationDTOToJSONTyped(value?: PrestationDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'code': value['code'],
        'idOperation': value['idOperation'],
        'localisations': value['localisations'] == null ? undefined : ((value['localisations'] as Array<any>).map(LocalisationToJSON)),
    };
}


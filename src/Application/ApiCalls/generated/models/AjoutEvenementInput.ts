/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AjoutEvenementInput
 */
export interface AjoutEvenementInput {
    /**
     * 
     * @type {string}
     * @memberof AjoutEvenementInput
     */
    commentaireEvenement?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AjoutEvenementInput
     */
    longitude?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AjoutEvenementInput
     */
    latitude?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof AjoutEvenementInput
     */
    suiDate?: Date;
}

/**
 * Check if a given object implements the AjoutEvenementInput interface.
 */
export function instanceOfAjoutEvenementInput(value: object): value is AjoutEvenementInput {
    return true;
}

export function AjoutEvenementInputFromJSON(json: any): AjoutEvenementInput {
    return AjoutEvenementInputFromJSONTyped(json, false);
}

export function AjoutEvenementInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): AjoutEvenementInput {
    if (json == null) {
        return json;
    }
    return {
        
        'commentaireEvenement': json['commentaireEvenement'] == null ? undefined : json['commentaireEvenement'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'suiDate': json['suiDate'] == null ? undefined : (new Date(json['suiDate'])),
    };
}

export function AjoutEvenementInputToJSON(json: any): AjoutEvenementInput {
    return AjoutEvenementInputToJSONTyped(json, false);
}

export function AjoutEvenementInputToJSONTyped(value?: AjoutEvenementInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'commentaireEvenement': value['commentaireEvenement'],
        'longitude': value['longitude'],
        'latitude': value['latitude'],
        'suiDate': value['suiDate'] == null ? undefined : ((value['suiDate']).toISOString()),
    };
}


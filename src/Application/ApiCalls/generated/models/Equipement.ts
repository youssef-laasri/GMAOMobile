/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Composant } from './Composant';
import {
    ComposantFromJSON,
    ComposantFromJSONTyped,
    ComposantToJSON,
    ComposantToJSONTyped,
} from './Composant';

/**
 * 
 * @export
 * @interface Equipement
 */
export interface Equipement {
    /**
     * 
     * @type {number}
     * @memberof Equipement
     */
    idquipement?: number;
    /**
     * 
     * @type {string}
     * @memberof Equipement
     */
    nameEquipement?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Equipement
     */
    statutLib?: string | null;
    /**
     * 
     * @type {Array<Composant>}
     * @memberof Equipement
     */
    composants?: Array<Composant> | null;
}

/**
 * Check if a given object implements the Equipement interface.
 */
export function instanceOfEquipement(value: object): value is Equipement {
    return true;
}

export function EquipementFromJSON(json: any): Equipement {
    return EquipementFromJSONTyped(json, false);
}

export function EquipementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Equipement {
    if (json == null) {
        return json;
    }
    return {
        
        'idquipement': json['idquipement'] == null ? undefined : json['idquipement'],
        'nameEquipement': json['nameEquipement'] == null ? undefined : json['nameEquipement'],
        'statutLib': json['statutLib'] == null ? undefined : json['statutLib'],
        'composants': json['composants'] == null ? undefined : ((json['composants'] as Array<any>).map(ComposantFromJSON)),
    };
}

export function EquipementToJSON(json: any): Equipement {
    return EquipementToJSONTyped(json, false);
}

export function EquipementToJSONTyped(value?: Equipement | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idquipement': value['idquipement'],
        'nameEquipement': value['nameEquipement'],
        'statutLib': value['statutLib'],
        'composants': value['composants'] == null ? undefined : ((value['composants'] as Array<any>).map(ComposantToJSON)),
    };
}


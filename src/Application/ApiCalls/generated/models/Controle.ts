/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Controle
 */
export interface Controle {
    /**
     * 
     * @type {number}
     * @memberof Controle
     */
    idControle?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    nomControle?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    moyen?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    anomalie?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    operation?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    frequence?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Controle
     */
    statutLib?: string | null;
}

/**
 * Check if a given object implements the Controle interface.
 */
export function instanceOfControle(value: object): value is Controle {
    return true;
}

export function ControleFromJSON(json: any): Controle {
    return ControleFromJSONTyped(json, false);
}

export function ControleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Controle {
    if (json == null) {
        return json;
    }
    return {
        
        'idControle': json['idControle'] == null ? undefined : json['idControle'],
        'nomControle': json['nomControle'] == null ? undefined : json['nomControle'],
        'moyen': json['moyen'] == null ? undefined : json['moyen'],
        'anomalie': json['anomalie'] == null ? undefined : json['anomalie'],
        'operation': json['operation'] == null ? undefined : json['operation'],
        'frequence': json['frequence'] == null ? undefined : json['frequence'],
        'statutLib': json['statutLib'] == null ? undefined : json['statutLib'],
    };
}

export function ControleToJSON(json: any): Controle {
    return ControleToJSONTyped(json, false);
}

export function ControleToJSONTyped(value?: Controle | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idControle': value['idControle'],
        'nomControle': value['nomControle'],
        'moyen': value['moyen'],
        'anomalie': value['anomalie'],
        'operation': value['operation'],
        'frequence': value['frequence'],
        'statutLib': value['statutLib'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompteurInfo
 */
export interface CompteurInfo {
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    idCompteur?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    nouveauIndex?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    dateReleve?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    changeCompteur?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    ancienIndexSI?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CompteurInfo
     */
    noIntervention?: number;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    codeImmeuble?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    oldIndexDeb?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    oldIndexFin?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    erreurCompteur?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    actionChaufferie?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    raz?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    panne?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    oldRAZ?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    oldPanne?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    codeSurConso?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    qtnStock?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CompteurInfo
     */
    qtnPige?: string | null;
}

/**
 * Check if a given object implements the CompteurInfo interface.
 */
export function instanceOfCompteurInfo(value: object): value is CompteurInfo {
    return true;
}

export function CompteurInfoFromJSON(json: any): CompteurInfo {
    return CompteurInfoFromJSONTyped(json, false);
}

export function CompteurInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompteurInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'idCompteur': json['idCompteur'] == null ? undefined : json['idCompteur'],
        'nouveauIndex': json['nouveauIndex'] == null ? undefined : json['nouveauIndex'],
        'dateReleve': json['dateReleve'] == null ? undefined : json['dateReleve'],
        'changeCompteur': json['changeCompteur'] == null ? undefined : json['changeCompteur'],
        'ancienIndexSI': json['ancienIndexSI'] == null ? undefined : json['ancienIndexSI'],
        'noIntervention': json['noIntervention'] == null ? undefined : json['noIntervention'],
        'codeImmeuble': json['codeImmeuble'] == null ? undefined : json['codeImmeuble'],
        'oldIndexDeb': json['oldIndexDeb'] == null ? undefined : json['oldIndexDeb'],
        'oldIndexFin': json['oldIndexFin'] == null ? undefined : json['oldIndexFin'],
        'erreurCompteur': json['erreurCompteur'] == null ? undefined : json['erreurCompteur'],
        'actionChaufferie': json['actionChaufferie'] == null ? undefined : json['actionChaufferie'],
        'raz': json['raz'] == null ? undefined : json['raz'],
        'panne': json['panne'] == null ? undefined : json['panne'],
        'oldRAZ': json['oldRAZ'] == null ? undefined : json['oldRAZ'],
        'oldPanne': json['oldPanne'] == null ? undefined : json['oldPanne'],
        'codeSurConso': json['codeSurConso'] == null ? undefined : json['codeSurConso'],
        'qtnStock': json['qtnStock'] == null ? undefined : json['qtnStock'],
        'qtnPige': json['qtnPige'] == null ? undefined : json['qtnPige'],
    };
}

export function CompteurInfoToJSON(json: any): CompteurInfo {
    return CompteurInfoToJSONTyped(json, false);
}

export function CompteurInfoToJSONTyped(value?: CompteurInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'idCompteur': value['idCompteur'],
        'nouveauIndex': value['nouveauIndex'],
        'dateReleve': value['dateReleve'],
        'changeCompteur': value['changeCompteur'],
        'ancienIndexSI': value['ancienIndexSI'],
        'noIntervention': value['noIntervention'],
        'codeImmeuble': value['codeImmeuble'],
        'oldIndexDeb': value['oldIndexDeb'],
        'oldIndexFin': value['oldIndexFin'],
        'erreurCompteur': value['erreurCompteur'],
        'actionChaufferie': value['actionChaufferie'],
        'raz': value['raz'],
        'panne': value['panne'],
        'oldRAZ': value['oldRAZ'],
        'oldPanne': value['oldPanne'],
        'codeSurConso': value['codeSurConso'],
        'qtnStock': value['qtnStock'],
        'qtnPige': value['qtnPige'],
    };
}


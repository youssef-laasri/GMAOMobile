/* tslint:disable */
/* eslint-disable */
/**
 * AXECIEL.GMAO.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DayOfWeek } from './DayOfWeek';
import {
    DayOfWeekFromJSON,
    DayOfWeekFromJSONTyped,
    DayOfWeekToJSON,
    DayOfWeekToJSONTyped,
} from './DayOfWeek';

/**
 * 
 * @export
 * @interface DateOnly
 */
export interface DateOnly {
    /**
     * 
     * @type {number}
     * @memberof DateOnly
     */
    year?: number;
    /**
     * 
     * @type {number}
     * @memberof DateOnly
     */
    month?: number;
    /**
     * 
     * @type {number}
     * @memberof DateOnly
     */
    day?: number;
    /**
     * 
     * @type {DayOfWeek}
     * @memberof DateOnly
     */
    dayOfWeek?: DayOfWeek;
    /**
     * 
     * @type {number}
     * @memberof DateOnly
     */
    readonly dayOfYear?: number;
    /**
     * 
     * @type {number}
     * @memberof DateOnly
     */
    readonly dayNumber?: number;
}



/**
 * Check if a given object implements the DateOnly interface.
 */
export function instanceOfDateOnly(value: object): value is DateOnly {
    return true;
}

export function DateOnlyFromJSON(json: any): DateOnly {
    return DateOnlyFromJSONTyped(json, false);
}

export function DateOnlyFromJSONTyped(json: any, ignoreDiscriminator: boolean): DateOnly {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'] == null ? undefined : json['year'],
        'month': json['month'] == null ? undefined : json['month'],
        'day': json['day'] == null ? undefined : json['day'],
        'dayOfWeek': json['dayOfWeek'] == null ? undefined : DayOfWeekFromJSON(json['dayOfWeek']),
        'dayOfYear': json['dayOfYear'] == null ? undefined : json['dayOfYear'],
        'dayNumber': json['dayNumber'] == null ? undefined : json['dayNumber'],
    };
}

export function DateOnlyToJSON(json: any): DateOnly {
    return DateOnlyToJSONTyped(json, false);
}

export function DateOnlyToJSONTyped(value?: Omit<DateOnly, 'dayOfYear'|'dayNumber'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'year': value['year'],
        'month': value['month'],
        'day': value['day'],
        'dayOfWeek': DayOfWeekToJSON(value['dayOfWeek']),
    };
}

